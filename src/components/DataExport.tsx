import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Download, Share2, FileJson, FileText } from "lucide-react";
import { toast } from "sonner";

interface DataExportProps {
  asteroidSize: number;
  asteroidSpeed: number;
  impactAngle: number;
  calculations: any;
}

const DataExport = ({ asteroidSize, asteroidSpeed, impactAngle, calculations }: DataExportProps) => {
  const generateReport = () => {
    const report = {
      timestamp: new Date().toISOString(),
      scenario: "Impactor-2025 Simulation",
      parameters: {
        diameter: `${asteroidSize}m`,
        velocity: `${asteroidSpeed} km/s`,
        impactAngle: `${impactAngle}Â°`,
      },
      calculations: calculations,
      summary: `Asteroid impact scenario with ${asteroidSize}m diameter object traveling at ${asteroidSpeed} km/s would result in ${calculations.megatonsTNT} megatons of TNT equivalent energy.`
    };

    return report;
  };

  const exportJSON = () => {
    const report = generateReport();
    const dataStr = JSON.stringify(report, null, 2);
    const dataBlob = new Blob([dataStr], { type: 'application/json' });
    const url = URL.createObjectURL(dataBlob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `asteroid-impact-report-${Date.now()}.json`;
    link.click();
    
    toast.success("Report exported!", {
      description: "JSON data file downloaded successfully"
    });
  };

  const exportText = () => {
    const report = generateReport();
    const textReport = `
ASTEROID IMPACT SCENARIO REPORT
================================
Generated: ${new Date().toLocaleString()}
Scenario: ${report.scenario}

PARAMETERS
----------
Diameter: ${report.parameters.diameter}
Velocity: ${report.parameters.velocity}
Impact Angle: ${report.parameters.impactAngle}

CALCULATIONS
------------
Impact Energy: ${calculations.megatonsTNT} Megatons TNT
Crater Diameter: ${calculations.craterDiameter}m
Seismic Magnitude: ${calculations.richterScale} Richter
Tsunami Risk: ${calculations.tsunamiPotential}
Danger Level: ${calculations.dangerLevel}
Asteroid Mass: ${calculations.mass} tons
Impact Efficiency: ${calculations.angleEfficiency}%

SUMMARY
-------
${report.summary}

This report was generated by Impact Watch Nexus.
Data based on simplified physics models for educational purposes.
    `.trim();

    const dataBlob = new Blob([textReport], { type: 'text/plain' });
    const url = URL.createObjectURL(dataBlob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `asteroid-impact-report-${Date.now()}.txt`;
    link.click();
    
    toast.success("Report exported!", {
      description: "Text report downloaded successfully"
    });
  };

  const shareResults = () => {
    const report = generateReport();
    const shareText = `Impact Watch Nexus Simulation: ${asteroidSize}m asteroid at ${asteroidSpeed} km/s would release ${calculations.megatonsTNT} megatons of energy. Danger Level: ${calculations.dangerLevel}`;
    
    if (navigator.share) {
      navigator.share({
        title: 'Asteroid Impact Simulation',
        text: shareText,
        url: window.location.href
      }).then(() => {
        toast.success("Shared successfully!");
      }).catch(() => {
        copyToClipboard(shareText);
      });
    } else {
      copyToClipboard(shareText);
    }
  };

  const copyToClipboard = (text: string) => {
    navigator.clipboard.writeText(text);
    toast.success("Copied to clipboard!", {
      description: "Share the simulation results"
    });
  };

  return (
    <Card className="p-6 space-y-4 bg-card/50 backdrop-blur-sm border-border">
      <h3 className="text-xl font-semibold text-foreground flex items-center gap-2">
        <Download className="w-5 h-5 text-primary" />
        Export & Share
      </h3>

      <div className="grid grid-cols-1 sm:grid-cols-3 gap-3">
        <Button
          variant="outline"
          className="h-auto py-4 flex-col gap-2 hover:border-primary/50 hover:bg-primary/5"
          onClick={exportJSON}
        >
          <FileJson className="w-5 h-5 text-primary" />
          <span className="text-sm">Export JSON</span>
        </Button>

        <Button
          variant="outline"
          className="h-auto py-4 flex-col gap-2 hover:border-primary/50 hover:bg-primary/5"
          onClick={exportText}
        >
          <FileText className="w-5 h-5 text-secondary" />
          <span className="text-sm">Export TXT</span>
        </Button>

        <Button
          variant="outline"
          className="h-auto py-4 flex-col gap-2 hover:border-primary/50 hover:bg-primary/5"
          onClick={shareResults}
        >
          <Share2 className="w-5 h-5 text-accent" />
          <span className="text-sm">Share Results</span>
        </Button>
      </div>

      <p className="text-xs text-muted-foreground text-center">
        Download detailed reports or share your simulation results
      </p>
    </Card>
  );
};

export default DataExport;
